log4j.rootLogger = INFO, A1,A2
log4j.appender.A1=org.apache.log4j.ConsoleAppender  
log4j.appender.A1.layout=org.apache.log4j.PatternLayout  
log4j.appender.A1.layout.ConversionPattern=%-5p %d{MM-dd HH:mm:ss} [%m] [%l] %n

#生产环境时可打开以下记录文件的log
log4j.appender.A2 =org.apache.log4j.DailyRollingFileAppender
log4j.appender.A2.Threshold=INFO 
log4j.appender.A2.layout = org.apache.log4j.PatternLayout
log4j.appender.A2.file=logs/eis/eis.log
log4j.appender.A2.DatePattern='.'yyyy-MM-dd  
log4j.appender.A2.layout.ConversionPattern=%-5p %d{MM-dd HH:mm:ss} [%m] [%l] %n
#log4j.appender.A2 =org.apache.log4j.DailyRollingFileAppender
#log4j.appender.A2.Threshold=WARN 
#log4j.appender.A2.layout = org.apache.log4j.PatternLayout
#log4j.appender.A2.file=d:/logs/eis.log
#log4j.appender.A2.DatePattern='.'yyyy-MM-dd  
#log4j.appender.A2.layout.ConversionPattern =%-5p %d{MM-dd HH:mm:ss} [%m] [%l] %n

###############################  log4j级别  ###############################
级别：  FATAL  -  0    指出每个严重的错误事件将会导致应用程序的退出。
       ERROR -  3    \u00D6\u00B8\u00B3\u00F6\u00CB\u00E4\u00C8\u00BB\u00B7\u00A2\u00C9\u00FA\u00B4\u00ED\u00CE\u00F3\u00CA\u00C2\u00BC\u00FE\u00A3\u00AC\u00B5\u00AB\u00C8\u00D4\u00C8\u00BB\u00B2\u00BB\u00D3\u00B0\u00CF\u00EC\u00CF\u00B5\u00CD\u00B3\u00B5\u00C4\u00BC\u00CC\u00D0\u00F8\u00D4\u00CB\u00D0\u00D0\u00A1\u00A3
       WARN -  4    \u00B1\u00ED\u00C3\u00F7\u00BB\u00E1\u00B3\u00F6\u00CF\u00D6\u00C7\u00B1\u00D4\u00DA\u00B4\u00ED\u00CE\u00F3\u00B5\u00C4\u00C7\u00E9\u00D0\u00CE\u00A1\u00A3
       INFO -  6    \u00B1\u00ED\u00C3\u00F7\u00CF\u00FB\u00CF\u00A2\u00D4\u00DA\u00B4\u00D6\u00C1\u00A3\u00B6\u00C8\u00BC\u00B6\u00B1\u00F0\u00C9\u00CF\u00CD\u00BB\u00B3\u00F6\u00C7\u00BF\u00B5\u00F7\u00D3\u00A6\u00D3\u00C3\u00B3\u00CC\u00D0\u00F2\u00B5\u00C4\u00D4\u00CB\u00D0\u00D0\u00B9\u00FD\u00B3\u00CC\u00A1\u00A3
       DEBUG -  7    \u00D6\u00B8\u00B3\u00F6\u00CF\u00B8\u00C1\u00A3\u00B6\u00C8\u00D0\u00C5\u00CF\u00A2\u00CA\u00C2\u00BC\u00FE\u00B6\u00D4\u00B5\u00F7\u00CA\u00D4\u00D3\u00A6\u00D3\u00C3\u00B3\u00CC\u00D0\u00F2\u00CA\u00C7\u00B7\u00C7\u00B3\u00A3\u00D3\u00D0\u00B0\u00EF\u00D6\u00FA\u00B5\u00C4\u00A1\u00A3
       	%m \u00CA\u00E4\u00B3\u00F6\u00B4\u00FA\u00C2\u00EB\u00D6\u00D0\u00D6\u00B8\u00B6\u00A8\u00B5\u00C4\u00CF\u00FB\u00CF\u00A2
　　		%p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
　　		%r   输出自应用启动到输出该log信息耗费的毫秒数 
　　		%c   输出所属的类目，通常就是所在类的全名 
　　		%t   输出产生该日志事件的线程名 
　　		%n   输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” 
　　		%d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921  
　　		%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
#%d [%t] %-5p %c - %m%n
log4j.logger.org.hibernate = ERROR
log4j.logger.org.springframework = ERROR
log4j.logger.com.opensymphony = ERROR
log4j.logger.org.apache.commons = ERROR
log4j.logger.net.sf.ehcache = ERROR
log4j.logger.org.apache.catalina = ERROR
log4j.logger.net.zdsoft = INFO



